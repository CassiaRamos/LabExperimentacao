{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/home/ritars/LabExperimentacao/git-mining/src/App.js\";\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Login from './Login';\nimport Button from './Button';\nimport RepoCard from './RepoCard';\nconst receivedToken = localStorage.getItem('token');\nconst accessToken = 'bearer' + localStorage.getItem('token');\nconst query = `query RepositoriosPopulares {\n  search(query: \"stars:>100\", type: REPOSITORY, first: 1) {\n    nodes {\n      ... on Repository {\n        nameWithOwner\n        createdAt\n        pullRequests {\n          totalCount\n        }\n        releases {\n          totalCount\n        }\n        updatedAt\n        primaryLanguage {\n          name\n        }\n        closedIssues: issues(states: CLOSED) {\n          totalCount\n        }\n        totalIssues: issues {\n          totalCount\n        }\n        stargazers {\n          totalCount\n        }\n      }\n    }\n  }\n}`;\nlet data = fetch('http://api.github.com/graphql', {\n  method: 'POST',\n  headers: {\n    Authorization: accessToken\n  },\n  body: JSON.stringify({\n    query: query\n  })\n}).then(res => res.json()).then(json => console.log(json));\nconst Global = createGlobalStyle({\n  body: {\n    backgroundColor: '#fff',\n    color: '#000',\n    fontFamily: '\"Segoe UI\", \"Roboto\"',\n    padding: 0,\n    margin: 0,\n    borderTop: '4px solid purple'\n  },\n  '*': {\n    boxSizing: 'border-box'\n  }\n});\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"App___StyledButton\",\n  componentId: \"pmrry0-0\"\n})({\n  display: 'grid',\n  gridTemplateColumns: '80px repeat(auto-fit, 300px)',\n  height: 'calc(5vh - 4px)',\n  overflow: 'hidden',\n  alignItems: 'center',\n  margin: '20px'\n});\n\nfunction App() {\n  return React.createElement(React.Fragment, null, React.createElement(Global, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), receivedToken ? React.createElement(_StyledButton, {\n    onClick: () => {\n      localStorage.clear();\n      window.location.reload();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"SAIR\") : React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, data, \" \", console.log('teste'))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ritars/LabExperimentacao/git-mining/src/App.js"],"names":["React","createGlobalStyle","Login","Button","RepoCard","receivedToken","localStorage","getItem","accessToken","query","data","fetch","method","headers","Authorization","body","JSON","stringify","then","res","json","console","log","Global","backgroundColor","color","fontFamily","padding","margin","borderTop","boxSizing","display","gridTemplateColumns","height","overflow","alignItems","App","clear","window","location","reload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtB;AAEA,MAAMC,WAAW,GAAG,WAAWF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA/B;AAEA,MAAME,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAf;AA+BA,IAAIC,IAAI,GAAGC,KAAK,CAAC,+BAAD,EAAkC;AAChDC,EAAAA,MAAM,EAAE,MADwC;AAEhDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEN;AADR,GAFuC;AAKhDO,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,IAAAA,KAAK,EAAEA;AADY,GAAf;AAL0C,CAAlC,CAAL,CASRS,IATQ,CASHC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATJ,EAURF,IAVQ,CAUHE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAVL,CAAX;AAYA,MAAMG,MAAM,GAAGtB,iBAAiB,CAAC;AAChCc,EAAAA,IAAI,EAAE;AACLS,IAAAA,eAAe,EAAE,MADZ;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,UAAU,EAAE,sBAHP;AAILC,IAAAA,OAAO,EAAE,CAJJ;AAKLC,IAAAA,MAAM,EAAE,CALH;AAMLC,IAAAA,SAAS,EAAE;AANN,GAD0B;AAShC,OAAK;AACJC,IAAAA,SAAS,EAAE;AADP;AAT2B,CAAD,CAAhC;;;;;GAwBe;AACHC,EAAAA,OAAO,EAAE,MADN;AAEHC,EAAAA,mBAAmB,EAAE,8BAFlB;AAGHC,EAAAA,MAAM,EAAE,iBAHL;AAIHC,EAAAA,QAAQ,EAAE,QAJP;AAKHC,EAAAA,UAAU,EAAE,QALT;AAMHP,EAAAA,MAAM,EAAE;AANL,C;;AAVf,SAASQ,GAAT,GAAe;AACb,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG/B,aAAa,GACZ;AACE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,YAAY,CAAC+B,KAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,GAiBR,oBACJ,KADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBR,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK9B,IAAL,OAAYW,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAZ,CADJ,CAtBF,CADF;AA4BD;;AAED,eAAec,GAAf","sourcesContent":["import React from 'react';\nimport 'styled-components/macro';\nimport { createGlobalStyle } from 'styled-components';\nimport Login from './Login';\nimport Button from './Button';\nimport RepoCard from './RepoCard';\n\nconst receivedToken = localStorage.getItem('token');\n\nconst accessToken = 'bearer' + localStorage.getItem('token')\n\nconst query = `query RepositoriosPopulares {\n  search(query: \"stars:>100\", type: REPOSITORY, first: 1) {\n    nodes {\n      ... on Repository {\n        nameWithOwner\n        createdAt\n        pullRequests {\n          totalCount\n        }\n        releases {\n          totalCount\n        }\n        updatedAt\n        primaryLanguage {\n          name\n        }\n        closedIssues: issues(states: CLOSED) {\n          totalCount\n        }\n        totalIssues: issues {\n          totalCount\n        }\n        stargazers {\n          totalCount\n        }\n      }\n    }\n  }\n}`;\n\n\nlet data = fetch('http://api.github.com/graphql', {\n  method: 'POST',\n  headers: {\n    Authorization: accessToken,\n  },\n  body: JSON.stringify({\n    query: query,\n  }),\n})\n  .then(res => res.json())\n  .then(json => console.log(json));\n\nconst Global = createGlobalStyle({\n\tbody: {\n\t\tbackgroundColor: '#fff',\n\t\tcolor: '#000',\n\t\tfontFamily: '\"Segoe UI\", \"Roboto\"',\n\t\tpadding: 0,\n\t\tmargin: 0,\n\t\tborderTop: '4px solid purple',\n\t},\n\t'*': {\n\t\tboxSizing: 'border-box',\n\t},\n});\n\nfunction App() {\n  return (\n    <>\n      <Global/>\n      {receivedToken ? (\n        <Button\n          onClick={() => {\n            localStorage.clear();\n            window.location.reload();\n          }}\n          css={{\n            display: 'grid',\n            gridTemplateColumns: '80px repeat(auto-fit, 300px)',\n            height: 'calc(5vh - 4px)',\n            overflow: 'hidden',\n            alignItems: 'center',\n            margin: '20px',\n          }}\n        >\n          SAIR\n      </Button> \n      ) : ( <\n        Login/>\n      )}\n      <ul>\n          <li>{data} {console.log('teste')}</li>\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}